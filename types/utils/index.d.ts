export function noop(): void;
export function supportOffscreen($canvas: any): boolean;
export function supportOffscreenV2(): boolean;
export function createContextGL($canvas: any): any;
export function audioContextUnlock(context: any): void;
export function dataURLToFile(dataURL?: string): File;
export function downloadFile(file: any, fileName: any): void;
export function downloadImg(content: any, fileName: any): void;
export function checkFull(): boolean;
export function now(): number;
export function clamp(num: any, a: any, b: any): number;
export function setStyle(element: any, key: any, value: any): any;
export function getStyle(element: any, key: any, numberType?: boolean): string | number;
export function getNowTime(): number;
export function calculationRate(callback: any): (size: any) => void;
export function downloadRecord(blob: any, name: any, suffix: any): void;
export function isMobile(): boolean;
export function isAndroid(): boolean;
export function isIOS(): boolean;
export function parseTime(time: any, cFormat: any, ...args: any[]): any;
export function supportWCS(): boolean;
export function toNumber(value: any): any;
export function uuid16(): string;
export function throttle(callback: any, delay: any): (...args2: any[]) => void;
export function isDef(v: any): boolean;
export function formatVideoDecoderConfigure(avcC: any): {
    codec: string;
    description: any;
};
export function isFullScreen(): any;
export function bpsSize(value: any): string;
export function fpsStatus(fps: any): number;
export function createEmptyImageBitmap(width: any, height: any): Promise<ImageBitmap>;
export function supportMSE(): boolean;
export function supportMSEHevc(): boolean;
export function supportMediaStreamTrack(): boolean;
export function formatMp4VideoCodec(codec: any): string;
export function saveBlobToFile(fileName: any, blob: any): void;
export function isEmpty(value: any): boolean;
export function isBoolean(value: any): boolean;
export function isNotEmpty(value: any): boolean;
export function initPlayTimes(): {
    playInitStart: string;
    playStart: string;
    streamStart: string;
    streamResponse: string;
    demuxStart: string;
    decodeStart: string;
    videoStart: string;
    playTimestamp: string;
    streamTimestamp: string;
    streamResponseTimestamp: string;
    demuxTimestamp: string;
    decodeTimestamp: string;
    videoTimestamp: string;
    allTimestamp: string;
};
export function createWatermark(options: any): () => void;
export function formatTimeTips(time: any): string;
export function getTarget(e: any): any;
export function isWebglRenderSupport(width: any): boolean;
export function isGreenYUV(arrayBuffer: any): boolean;
export function getBrowser(): {
    type: string;
    version: number;
};
export function closeVideoFrame(videoFrame: any): void;
export function removeElement(element: any): boolean;
export const supportedWasm: boolean;
export const env: "__ENV__";
